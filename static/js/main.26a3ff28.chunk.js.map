{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","prototype","propTpes","string","isRequired","aboutText","defaultProps","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.26a3ff28.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTpes from 'prop-types'\r\n//import { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}r\n    <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n          <a className=\"nav-link\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          {/*<li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n  </li>*/}\r\n          \r\n        </ul>\r\n        {/*<form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n  </form>*/}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title:propTpes.string.isRequired,\r\n  aboutText:propTpes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'set title here',\r\n  aboutText: 'About Text here'\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n      let newText = text.toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  }\r\n  const handleClearClick = ()=>{\r\n      let newText = '';\r\n      setText(newText)\r\n      props.showAlert(\"Text Cleared!\", \"success\");\r\n  }\r\n  const HandleCopy = () =>{\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select()\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n  }\r\n\r\n  const HandleExtraSpaces = () =>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra spaces removed!\", \"success\");\r\n  }\r\n    const handleonChange = (event)=>{\r\n        //console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n         <div  className=\"mb-3\">\r\n      <textarea className=\"form-control\" value={text} onChange={handleonChange} \r\n      style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} \r\n      id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button disabled={text.length===0}  className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button disabled={text.length===0}  className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n       <button disabled={text.length===0}  className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>Clear Text</button>\r\n       <button disabled={text.length===0}  className=\"btn btn-primary mx-2 my-2\" onClick={HandleCopy}>Copy Text</button>\r\n       <button disabled={text.length===0}  className=\"btn btn-primary mx-2 my-2\" onClick={HandleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className='container my-3'  style={{color: props.mode==='dark'?'white':'#08156d'}}>\r\n      <h2> Your Text Summary</h2>\r\n      <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length}characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n      <h2> Preview</h2>\r\n      <p> {text.length>0?text:\"Enter something in the textbox above to preview here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n{/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n}\nfrom \"react-router-dom\";*/}\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null);\n    }, 2000);\n}\n\n  function toggleMode() {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#08156d';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/*<Router>*/}\n     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} aboutText=\"About TextUtils\" />\n     <Alert alert={alert}/>\n     <div className=\"container my-3\">\n     {/*<Switch>*/}\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          {/*<Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n      <Route exact path=\"/\">*/}\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n          {/*</Route>\n    </Switch>*/}\n     </div>\n     {/*</Router>*/}\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}